Да се реализира следната йерархия от класове.

Да се реализира абстрактен базов клас File, който представя файл от файлова система. 
Всеки файл се задава чрез име (символен низ с произволна дължина) и тип. За тип на файл може да се използва следната декларация:

enum FileType
{
    REGULAR,
    DIRECTORY,
    LINK
};

Основните операции за работа с файлове, които трябва да бъдат реализирани са:

функция rename(const char*) за преименуване на файл;
функция printContent() за извеждане на информация за файл на стандартния изход;
оператор += за добавяне на съдържание към файл. Съдържанието, което трябва да се добави се задава чрез друг файл (File*);
функция getFileType() за връщане на типа на файл.
Да се реализира клас RegularFile, който наследява File и представя обикновен текстов файл. 
Всеки текстов файл има име, разширение и съдържание, които се представят със символни низове с произволна дължина.

Функцията printContent в класа RegularFile извежда на стандартния изход името на даден файл, заедно с неговото разширение и съдържание.
Операторът += в класа RegularFile се дефинира по следния начин. Ако допълнителното съдържание, 
което се подава е обикновен файл (от тип REGULAR) или връзка (от тип LINK), сочеща към обикновен файл (REGULAR), 
тогава съдържанието на втория файл се добавя в края на първия файл. В противен случай, съдържанието на текущия (първия) файл не се променя.
Да се реализира клас Directory, който наследява File и представя директория в дадена файлова система. 
Всяка директория има име и може да съдържа в себе си множество (масив) от други файлове.

Функцията printContent в класа Directory извежда на стандартния изход името на дадена директория, 
последвано от имената на файловете, които се съдържат в нея.
Операторът += в класа Directory добавя подадения като аргумент на функцията файл към множеството от файлове в директорията. 
Не се допуска добавяне на директория към себе си.
Да се реализира клас Link, който наследява File и представя връзка към файл – директория или обикновен файл. 
Връзката се задава в конструктора чрез аргумент от тип File* и не може да се променя. 
Всеки файл може да има повече от една връзка към себе си. Не може да съществува връзка към връзка.

Функцията printContent и операторът += в класа Link зависят от типа на файла, към който сочи връзката и се пренасочват към него.
Да се реализира клас User, който се задава с име, парола и множество (масив) от файлове, 
които може да са обикновени файлове, връзки или директории с файлове.

Да се реализира тестова програма в която се извършват следните действия:

Създават се файловете:

обикновен текстов файл с име „Exam.cpp“ и съдържание „#include <iostream>\n”;
обикновен текстов файл с име „main.cpp“ и съдържание „int main(){}”;
връзка към файла Exam.cpp с име „LinkToExam“;
директория с име OOP, която съдържа файловете Exam.cpp и main.cpp.
Към връзката LinkToExam да се добави съдържанието на файла main.cpp. Да се изведе съдържанието на файла Exam.cpp.

Да се изведе информация за съдържанието на директорията OOP.

Да се създаде потребител с име вашия факултетен номер и същата парола. 
Да се добави директорията OOP в списъка с файлове на създадения потребител.

